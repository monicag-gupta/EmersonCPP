Create a menu-driven Employee Management System in C++ that allows you to:
Add Employees (Name, ID, Salary).
Display All Employees.
Search Employee by ID.
Delete Employee by ID.
Use OOP concepts (classes, encapsulation, inheritance) and pointers (dynamic memory, object pointers).


Step-by-Step Plan
Define an Employee class with:
  Data members: id, name, salary.
  Functions: display().
Use inheritance: Create a Manager class that extends Employee (with an extra field department).
Use pointers:
  Store employees in an array of Employees.
  Dynamically allocate memory using new.
  Use delete to free memory when deleting employees.
  Create a Menu System for user interaction.




Enhance the Features to Cover:
OOP (Encapsulation, Inheritance) – Employee, Manager
Pointers – Used in menu system
Smart Pointers (std & Boost) – shared_ptr, unique_ptr, boost::shared_ptr
Boost Regex – Input validation for names
Boost Filesystem – Save/load employee data
Dynamic memory management – via smart pointers (no manual delete needed)

Use Smart Pointers
Use std::unique_ptr<Employee> and std::shared_ptr<Employee> to store employees.
Show Boost smart pointers (boost::scoped_ptr, boost::shared_ptr) for comparison.

Use Boost Regex
Validate employee name (only alphabets allowed).
Validate employee ID (only numbers).

Use Boost Filesystem
Save employee data to a file.
Load employee data at startup.



Menu System
Add Employee / Manager
Display Employees
Search Employee by ID
Delete Employee by ID
Save/Load Data (Boost filesystem)




.
