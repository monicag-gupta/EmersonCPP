#include <iostream>
using namespace std;
int main () {
   int  var = 20;   // actual variable declaration.
   int  *ip;        // pointer variable

   ip = &var;       // store address of var in pointer variable

   cout << "Value of var variable: ";
   cout << var << endl;

   // print the address stored in ip pointer variable
   cout << "Address stored in ip variable: ";
   cout << ip << endl;   //address of var// in hexadecimal // 0x…

   // access the value at the address available in pointer
   cout << "Value of *ip variable: ";
   cout << *ip << endl;

   return 0;
}








#include <iostream>
using namespace std;

int main() {
    int arr[3] = {10, 20, 30};
    int* p = arr;

    cout << *p << endl;     // 10
    cout << *(p+1) << endl; // 20
    cout << *(p+2) << endl; // 30

    return 0;
}







#include <iostream>
using namespace std;

int main() {
    int* p = new int(50);   // allocate memory
    cout << "Value: " << *p << endl;

    delete p;  // free memory
    return 0;
}




#include <iostream>

using namespace std;
int main () {
   int  *ptr = NULL;
   cout << "The value of ptr is " << ptr <<endl ;
 
   return 0;
}





#include<iostream>
using namespace std;
int main() {
    int x = 42;
    int* p = &x;
    int** pp = &p;

    cout << "x = " << x << " with address : "<< &x <<endl;
    cout << "*p = " << *p <<" with address : " << p << endl;
    cout << "**pp = " << **pp << " with address : " << pp << endl;
    cout << " with address of pp : " << &pp << endl;


    **pp = 20;


    cout << "x = " << x << " with address : " << &x << endl;
    cout << "*p = " << *p << " with address : " << p << endl;
    cout << "**pp = " << **pp << " with address : " << pp << endl;
    cout << " with address of pp : " << &pp << endl;

    return 0;
}






#include <iostream>  
using namespace std;  
int main()  
{  
    int ptr1[5]; // integer array declaration  
    int *ptr2[5]; // integer array of pointer declaration  
    std::cout << "Enter five numbers :" << std::endl;  
    for(int i=0;i<5;i++)  
    {  
        std::cin >> ptr1[i];  
    }  
    for(int i=0;i<5;i++)  
    {  
        ptr2[i]=&ptr1[i];   
    }  
    // printing the values of ptr1 array  
    std::cout << "The values are" << std::endl;  
    for(int i=0;i<5;i++)  
    {  
        std::cout << *ptr2[i] << std::endl;  
    }  
 }  



#include <iostream>  
using namespace std;
int main()
{
    int* ptr;  // integer pointer declaration  
    int marks[10]; // marks array declaration  
    std::cout << "Enter the elements of an array :" << std::endl;
    for (int i = 0; i < 10; i++)
    {
        cin >> marks[i];
    }
    ptr = marks; // both marks and ptr pointing to the same element..  *ptr=marks[0], *(ptr +1) = marks[1]… 
    std::cout << "The value of *ptr is :" << *ptr << std::endl;
    std::cout << "The value of *marks is :" << *marks << std::endl;
    std::cout << "The value of marks[0] is :" << marks[0] << std::endl;
    std::cout << "The value of *ptr+1 is :" << *(ptr+1) << std::endl;
    std::cout << "The value of *marks+1 is :" << *(marks+1) << std::endl;
    std::cout << "The value of marks[1] is :" << marks[1] << std::endl;

}




#include <iostream>  
using namespace std;  
int main()  
{  
  char *names[5] = {"john",  
                    "Peter",  
                    "Marco",  
                    "Devin",  
                    "Ronan"};  
for(int i=0;i<5;i++)  
    {  
        std::cout << names[i] << std::endl;  
    }  
    return 0;  
}  





#include <iostream>
using namespace std;
void printArray(int arr[5]);
int main()
{
        int arr1[5] = { 10, 20, 30, 40, 50 };
        int arr2[5] = { 5, 15, 25, 35, 45 };
        printArray(arr1); //passing array to function
        printArray(arr2);
}
void printArray(int arr[5])
{
    cout << "Printing array elements:"<< endl;
    for (int i = 0; i < 5; i++)
    {
                   cout<<arr[i]<<"\n";
    }
}





#include <iostream>
using namespace std;
// function declaration:
double getAverage(int *arr, int size);
 
int main () {
   // an int array with 5 elements.
   int balance[5] = {1000, 2, 3, 17, 50};
   double avg;
   // pass pointer to the array as an argument.
   avg = getAverage( balance, 5 ) ;
   // output the returned value 
   cout << "Average value is: " << avg << endl; 
   return 0;
}
double getAverage(int *arr, int size) {
   int i, sum = 0;       
   double avg;          
   for (i = 0; i < size; ++i) {
      sum += arr[i];
   }
   avg = double(sum) / size;
   return avg;
}






#include <iostream>  
using namespace std;  
int main()  
{  
  void *ptr;   // void pointer declaration  
  int a=9;   // integer variable initialization  
  ptr=&a;   // storing the address of 'a' variable in a void pointer variable.  
  std::cout << &a << std::endl;  
  std::cout << ptr << std::endl;  
  return 0;  
}  







#include <iostream>
using namespace std;
void my_int_func(int x)
{
	cout << x << endl;
}

int main() {
	void (*foo)(int);
	foo = my_int_func;
	//In some case its address of function:
	//foo = &my_int_func;
	// call my_int_func (note that you do not need to write (*foo)(2) ) 
	foo(2);
	//but if you want to, you may 
	(*foo)(2);
	return 0;
}


int (*ops[4])(int, int) = { Sum, Sub, Mul, Div };

ops[1](3,4) -> Sub


int sum(int x, int y){return x+y;}

int (*sumPtr)(int, int)
sumPtr=sum;
sumPtr(3,4); // 7




































