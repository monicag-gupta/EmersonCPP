#include <iostream>
using namespace std;
int main () {
   int  var = 20;   // actual variable declaration.
   int  *ip;        // pointer variable

   ip = &var;       // store address of var in pointer variable

   cout << "Value of var variable: ";
   cout << var << endl;

   // print the address stored in ip pointer variable
   cout << "Address stored in ip variable: ";
   cout << ip << endl;   //address of var// in hexadecimal // 0xâ€¦

   // access the value at the address available in pointer
   cout << "Value of *ip variable: ";
   cout << *ip << endl;

   return 0;
}








#include <iostream>
using namespace std;

int main() {
    int arr[3] = {10, 20, 30};
    int* p = arr;

    cout << *p << endl;     // 10
    cout << *(p+1) << endl; // 20
    cout << *(p+2) << endl; // 30

    return 0;
}







#include <iostream>
using namespace std;

int main() {
    int* p = new int(50);   // allocate memory
    cout << "Value: " << *p << endl;

    delete p;  // free memory
    return 0;
}




#include <iostream>

using namespace std;
int main () {
   int  *ptr = NULL;
   cout << "The value of ptr is " << ptr <<endl ;
 
   return 0;
}





#include<iostream>
using namespace std;
int main() {
    int x = 42;
    int* p = &x;
    int** pp = &p;

    cout << "x = " << x << " with address : "<< &x <<endl;
    cout << "*p = " << *p <<" with address : " << p << endl;
    cout << "**pp = " << **pp << " with address : " << pp << endl;
    cout << " with address of pp : " << &pp << endl;


    **pp = 20;


    cout << "x = " << x << " with address : " << &x << endl;
    cout << "*p = " << *p << " with address : " << p << endl;
    cout << "**pp = " << **pp << " with address : " << pp << endl;
    cout << " with address of pp : " << &pp << endl;

    return 0;
}






















