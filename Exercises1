Write a program in C++ to swap two numbers with and without using a third variable.



Solution:

#include <iostream>
using namespace std;
int main() {
    int a, b,t;
    cout << "Enter a: ";
    cin >> a;
    cout << "Enter b: ";
    cin >> b;
    cout << "\n Original value: \n";
    cout << "a = " << a << " b = " << b << endl;
    cout << "\nSwap Using 3rd var:\n";
    t = a;
    a = b;
    b = t;
    cout << "a = " << a << " b = " << b << endl;
    cout << "\nSwap without Using 3rd var:\n";
    a = a + b;
    b = a - b;
    a = a - b;
    cout << "a = " << a << " b = " << b << endl;
    return 0;
}






Design a menu driven program with following choices:
1. Continue and Break example 
2. for syntax
3. while syntax
4. do..while syntax
5. goto syntax
6. Finished study (Exit)
Based on the choice by the user: 
Perform the operation
If the choice is 6, only then we exit, else the menu runs infinitely.




While:
init
While(cond){
Statements;
Inc/dec
}


For:
For(init;cond;inc/dec){ //range of value
}



Do..while:
Init;
Do{
Statements;
Inc/dec;
}while(cond); //at least this loop will run for 1 iteration



Go to :
Init;
Label: 
Statements
Inc/dec
If (cond) 
Goto label





#include <iostream>
#define NEWLINE '\n'
using namespace std;

int main() {
	cout << "\nMenu Driven Program\n";
	int ch;
	for (;;) {
		cout << "\n\n1. Continue and Break example\n2. for syntax\n\
3. while syntax\n4. do..while syntax\n5. goto syntax\n6. Finished study(Exit)\nEnter choice: ";
		cin >> ch;
		if (ch == 1) {
			cout << "\n\nContinue and Break example\n\n\
				#include <iostream>\n\
				using namespace std;\n\
			int main() {\n\
				// Local variable declaration:\n\
				int a = 10;\n\
				// do loop execution\n\
				do {\n\
					if (a == 15) {\n\
						// skip the iteration.\n\
						a = a + 1;\n\
						continue;\n\
					}\n\
					cout << \"value of a: \" << a << endl;\n\
					a = a + 1;\n\
				} while (a < 20);\n\
				return 0;\n\
			}\n	";
		}
		else if (ch == 2) {
			cout << "\n\nfor syntax\nfor(initialization; condition; incr/decr){\n//code to be executed  \n} \n";
		}
		else if (ch == 3) {
			cout << "\n\nWhile Syntax\nInitialization;\nwhile (condition) {\n//code to be executed\nIncr / decr;\n}\n ";
		}
		else if (ch == 4) {
			cout << "\n\ndo..while Syntax\nInitialization;\ndo{ \n//code to be executed\nIncr / decr;\n}while(condition); \n";
		}
		else if (ch == 5) {
			cout << "\n\nGoto Syntax\nInitialization;\nLabel:\n//code to be executed\nIncr / decr;\nif(condition)\ngoto Label; \n";
		}
		else if (ch == 6)
			break;
		else
			cout << "\nIncorrect choice \n Try Again\n";

	}
	return 0;
}







Print all the elements through vararg functionality used for 5 arguments once and 7 arguments next:
Print(7 elements) -> prints each element and cumulative sum
Print(5 elements) -> prints each element and cumulative sum



//#include "stdafx.h"
#include <iostream>
#include <stdarg.h>
using namespace std;
void print(int num, ...) {
    va_list valist;

    int i;
    int val;
    int sum = 0;
    /* initialize valist for num number of arguments */
    va_start(valist, num);
    cout << "\nList starts:\n";
    /* access all the arguments assigned to valist */
    for (i = 0; i < num; i++) {
        val = va_arg(valist, int);
        sum += val;
        cout << val << "\t" << "Cumulative Sum : " << sum << "\n";
    }
    cout << "\nList ends\n";
    /* clean memory reserved for valist */
    va_end(valist);

}
int main() {
    print(5, 2, 3, 4, 5, 9);
    print(7, 5, 10, 15, 9, 2, 7, 6);
}






WAP to generate 5 random numbers between 5-10.
Rand() % (higher_limit - lower_limit + 1) + lower_limit






